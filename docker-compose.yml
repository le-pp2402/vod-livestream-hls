version: '3.8'

services:
  nginx:
    build:
      dockerfile: Dockerfile.nginx
    container_name: nginx
    restart: always
    networks:
      - app_network
      - default  
    ports:
      - "80:80"
      - "443:443"
      - "1935:1935"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      # - ./certificate.crt:/etc/ssl/pphatdev.tech/certificate.crt:ro
      # - ./private.key:/etc/ssl/pphatdev.tech/private.key:ro
      # - ./s3_certificate.crt:/etc/ssl/s3.pphatdev.tech/s3_certificate.crt:ro
      # - ./s3_private.key:/etc/ssl/s3.pphatdev.tech/s3_private.key:ro
      - ./tmp:/tmp

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    restart: always
    networks:
      - app_network
    environment:
      RABBITMQ_DEFAULT_USER: YOUR_RABBITMQ_USERNAME
      RABBITMQ_DEFAULT_PASS: YOUR_RABBITMQ_PASSWORD
    ports:
      - "5672:5672"  
      - "15672:15672"  

  minio:
    image: quay.io/minio/minio:RELEASE.2024-07-10T18-41-49Z
    container_name: minio
    volumes:
      - ./data:/data
    ports:
      - 9000:9000
      - 9001:9001
    environment:
      MINIO_ROOT_USER: YOURMINIO_ACCESS_KEY
      MINIO_ROOT_PASSWORD: YOURMINIO_SECRET_KEY
      MINIO_ADDRESS: ':9000'
      MINIO_CONSOLE_ADDRESS: ':9001' 
      MINIO_NOTIFY_AMQP_ENABLE_upload: 'on'
      MINIO_NOTIFY_AMQP_URL_upload: 'amqp://YOUR_RABBITMQ_USERNAME:YOUR_RABBITMQ_PASSWORD@rabbitmq:5672'
      MINIO_NOTIFY_AMQP_EXCHANGE_upload: 'minio-events'
      MINIO_NOTIFY_AMQP_ROUTING_KEY_upload: 'video.uploaded'
      MINIO_NOTIFY_AMQP_EXCHANGE_TYPE_upload: 'direct'
    command: minio server /data
    depends_on:
      - rabbitmq
    networks:
      - app_network

  mysql:
    image: mysql:latest
    container_name: mysql-container
    restart: always
    networks:
      - app_network
    environment:
      MYSQL_ROOT_PASSWORD: YOUR_DB_PASSWORD 
      MYSQL_DATABASE: Metube
    volumes:
      - ./mysql_data:/var/lib/mysql
    ports:
      - "3306:3306"
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-proot"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  app:
    build:
      dockerfile: Dockerfile.app
    container_name: app
    restart: always
    networks:
      - app_network
    depends_on:
      - nginx
      - rabbitmq
      - minio
      - mysql
    environment:
      DB_SOURCE: jdbc:mysql://mysql:3306/Metube?autoReconnect=true&useSSL=false&allowPublicKeyRetrieval=true
      DB_USERNAME: root
      DB_PASSWORD: YOUR_DB_PASSWORD
      MAIL_HOST: smtp.gmail.com
      MAIL_POST: 587
      MAIL_USERNAME: YOUR_GMAIL_USERNAME
      MAIL_PASSWORD: YOUR_GMAIL_PASSWORD
      SECRET_KEY: YOUR_SECRET_KEY
      EXPIRATION_TIME: 259200000
      MinIO_ACCESS_KEY: YOUR_MINIO_ACCESS_KEY
      MinIO_SECRET_KEY: YOUR_MINIO_SECRET_KEY
      MinIO_URL: http://minio:9000
      BUCKET_NAME: resources
      FOLDER_UPLOAD: /tmp/
      QUEUE_EVENT_UPLOAD: video.uploaded
      RABBITMQ_HOST: rabbitmq
      RABBITMQ_PORT: 5672
      RABBITMQ_USERNAME: YOUR_RABBITMQ_USERNAME
      RABBITMQ_PASSWORD: YOUR_RABBITMQ_PASSWORD
      GOOGLE_CLIENT_ID: YOUR_GG_CLIENT_ID.apps.googleusercontent.com
    ports:
      - "8888:8888"
  
  web:
    build:
      context: .
      dockerfile: Dockerfile.fe
    networks:
      - app_network
    ports:
      - "3333:3000"
    environment:
      BACKEND_API_URL: https://pphatdev.tech/be       # server-side
      AUTH_COOKIE_NAME: token                          # server-side
      LIVE_API_URL: https://pphatdev.tech/             # server-side
      NEXT_PUBLIC_LIVE_API_URL: https://pphatdev.tech/ # client-side
      GOOGLE_CLIENT_ID: YOUR_GG_CLIENT_ID.apps.googleusercontent.com
      NEXT_PUBLIC_GOOGLE_CLIENT_ID: YOUR_GG_CLIENT_ID.apps.googleusercontent.com
networks:
  app_network:
    driver: bridge
